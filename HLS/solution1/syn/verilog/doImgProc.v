// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doImgProc,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.340000,HLS_SYN_LAT=2756864,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=9,HLS_SYN_FF=1038,HLS_SYN_LUT=1361}" *)

module doImgProc (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt,
        s_axi_KERNEL_BUS_AWVALID,
        s_axi_KERNEL_BUS_AWREADY,
        s_axi_KERNEL_BUS_AWADDR,
        s_axi_KERNEL_BUS_WVALID,
        s_axi_KERNEL_BUS_WREADY,
        s_axi_KERNEL_BUS_WDATA,
        s_axi_KERNEL_BUS_WSTRB,
        s_axi_KERNEL_BUS_ARVALID,
        s_axi_KERNEL_BUS_ARREADY,
        s_axi_KERNEL_BUS_ARADDR,
        s_axi_KERNEL_BUS_RVALID,
        s_axi_KERNEL_BUS_RREADY,
        s_axi_KERNEL_BUS_RDATA,
        s_axi_KERNEL_BUS_RRESP,
        s_axi_KERNEL_BUS_BVALID,
        s_axi_KERNEL_BUS_BREADY,
        s_axi_KERNEL_BUS_BRESP
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 11'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 11'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 11'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 11'b10000;
parameter    ap_ST_pp0_stg4_fsm_5 = 11'b100000;
parameter    ap_ST_pp0_stg5_fsm_6 = 11'b1000000;
parameter    ap_ST_pp0_stg6_fsm_7 = 11'b10000000;
parameter    ap_ST_pp0_stg7_fsm_8 = 11'b100000000;
parameter    ap_ST_pp0_stg8_fsm_9 = 11'b1000000000;
parameter    ap_ST_st17_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_KERNEL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_KERNEL_BUS_ADDR_WIDTH = 6;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv19_1 = 19'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv19_4AC41 = 19'b1001010110001000001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_2B7 = 32'b1010110111;
parameter    ap_const_lv19_2B9 = 19'b1010111001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv10_2B9 = 10'b1010111001;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv10_2B7 = 10'b1010110111;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (C_S_AXI_CRTL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_KERNEL_BUS_WSTRB_WIDTH = (C_S_AXI_KERNEL_BUS_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [0:0] inStream_TKEEP;
input  [0:0] inStream_TSTRB;
input  [0:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [0:0] inStream_TID;
input  [0:0] inStream_TDEST;
output  [7:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [0:0] outStream_TKEEP;
output  [0:0] outStream_TSTRB;
output  [0:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [0:0] outStream_TID;
output  [0:0] outStream_TDEST;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;
input   s_axi_KERNEL_BUS_AWVALID;
output   s_axi_KERNEL_BUS_AWREADY;
input  [C_S_AXI_KERNEL_BUS_ADDR_WIDTH - 1 : 0] s_axi_KERNEL_BUS_AWADDR;
input   s_axi_KERNEL_BUS_WVALID;
output   s_axi_KERNEL_BUS_WREADY;
input  [C_S_AXI_KERNEL_BUS_DATA_WIDTH - 1 : 0] s_axi_KERNEL_BUS_WDATA;
input  [C_S_AXI_KERNEL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_KERNEL_BUS_WSTRB;
input   s_axi_KERNEL_BUS_ARVALID;
output   s_axi_KERNEL_BUS_ARREADY;
input  [C_S_AXI_KERNEL_BUS_ADDR_WIDTH - 1 : 0] s_axi_KERNEL_BUS_ARADDR;
output   s_axi_KERNEL_BUS_RVALID;
input   s_axi_KERNEL_BUS_RREADY;
output  [C_S_AXI_KERNEL_BUS_DATA_WIDTH - 1 : 0] s_axi_KERNEL_BUS_RDATA;
output  [1:0] s_axi_KERNEL_BUS_RRESP;
output   s_axi_KERNEL_BUS_BVALID;
input   s_axi_KERNEL_BUS_BREADY;
output  [1:0] s_axi_KERNEL_BUS_BRESP;

reg inStream_TREADY;
reg[7:0] outStream_TDATA;
reg outStream_TVALID;
reg[0:0] outStream_TKEEP;
reg[0:0] outStream_TSTRB;
reg[0:0] outStream_TUSER;
reg[0:0] outStream_TLAST;
reg[0:0] outStream_TID;
reg[0:0] outStream_TDEST;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm = 11'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_29;
reg    ap_ready;
reg   [3:0] kernel_address0;
reg    kernel_ce0;
wire   [7:0] kernel_q0;
wire   [31:0] operation;
wire    doImgProc_CRTL_BUS_s_axi_U_ap_dummy_ce;
wire    doImgProc_KERNEL_BUS_s_axi_U_ap_dummy_ce;
reg   [0:0] tmp_id_V_reg_398;
reg   [0:0] tmp_user_V_reg_411;
reg   [0:0] tmp_strb_V_reg_424;
reg   [0:0] tmp_keep_V_reg_437;
reg   [0:0] tmp_dest_V_reg_450;
reg   [31:0] col_assign_reg_463;
reg   [31:0] idxRow_reg_474;
reg   [31:0] pixConvolved_reg_485;
reg   [18:0] countWait_reg_497;
reg   [7:0] reg_519;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_150;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond1_reg_1290;
reg    ap_sig_bdd_160;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_5;
reg    ap_sig_bdd_172;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_8;
reg    ap_sig_bdd_182;
reg   [7:0] reg_523;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_193;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_6;
reg    ap_sig_bdd_202;
reg   [0:0] tmp_12_reg_1332;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1332_pp0_it1;
reg    ap_sig_ioackin_outStream_TREADY;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_9;
reg    ap_sig_bdd_222;
wire   [7:0] lineBuff_val_0_q0;
reg   [7:0] reg_527;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_234;
wire   [7:0] lineBuff_val_0_q1;
reg   [7:0] reg_532;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_7;
reg    ap_sig_bdd_245;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_255;
wire   [3:0] kernel_addr_gep_fu_215_p3;
reg   [3:0] kernel_addr_reg_1230;
wire   [3:0] kernel_addr_1_gep_fu_223_p3;
reg   [3:0] kernel_addr_1_reg_1235;
wire   [3:0] kernel_addr_2_gep_fu_231_p3;
reg   [3:0] kernel_addr_2_reg_1240;
wire   [3:0] kernel_addr_3_gep_fu_239_p3;
reg   [3:0] kernel_addr_3_reg_1245;
wire   [3:0] kernel_addr_4_gep_fu_247_p3;
reg   [3:0] kernel_addr_4_reg_1250;
wire   [3:0] kernel_addr_5_gep_fu_255_p3;
reg   [3:0] kernel_addr_5_reg_1255;
wire   [3:0] kernel_addr_6_gep_fu_263_p3;
reg   [3:0] kernel_addr_6_reg_1260;
wire   [3:0] kernel_addr_7_gep_fu_271_p3;
reg   [3:0] kernel_addr_7_reg_1265;
wire   [3:0] kernel_addr_8_gep_fu_279_p3;
reg   [3:0] kernel_addr_8_reg_1270;
wire   [0:0] sel_tmp2_fu_536_p2;
reg   [0:0] sel_tmp2_reg_1275;
wire   [0:0] sel_tmp5_fu_542_p2;
reg   [0:0] sel_tmp5_reg_1280;
wire   [0:0] sel_tmp8_fu_548_p2;
reg   [0:0] sel_tmp8_reg_1285;
wire   [0:0] exitcond1_fu_554_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1290_pp0_it1;
wire   [63:0] tmp_s_fu_560_p1;
reg   [63:0] tmp_s_reg_1294;
reg   [9:0] lineBuff_val_1_addr_reg_1299;
reg   [9:0] lineBuff_val_2_addr_reg_1304;
wire   [0:0] or_cond_fu_598_p2;
reg   [0:0] or_cond_reg_1309;
wire   [0:0] tmp_11_fu_604_p2;
reg   [0:0] tmp_11_reg_1317;
wire   [31:0] idxCol_1_fu_622_p3;
reg   [31:0] idxCol_1_reg_1322;
wire   [31:0] idxRow_1_fu_630_p3;
reg   [31:0] idxRow_1_reg_1327;
wire   [0:0] tmp_12_fu_638_p2;
wire   [18:0] phitmp_fu_644_p2;
reg   [18:0] phitmp_reg_1336;
reg   [0:0] tmp_keep_V_1_reg_1341;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_1_reg_1341_pp0_it1;
reg   [0:0] tmp_strb_V_1_reg_1347;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_1_reg_1347_pp0_it1;
reg   [0:0] tmp_user_V_1_reg_1353;
reg   [0:0] ap_reg_ppstg_tmp_user_V_1_reg_1353_pp0_it1;
reg   [0:0] tmp_id_V_1_reg_1359;
reg   [0:0] ap_reg_ppstg_tmp_id_V_1_reg_1359_pp0_it1;
reg   [0:0] tmp_dest_V_1_reg_1365;
reg   [0:0] ap_reg_ppstg_tmp_dest_V_1_reg_1365_pp0_it1;
wire   [31:0] pixConvolved_3_fu_675_p2;
reg   [31:0] pixConvolved_3_reg_1371;
wire   [31:0] col_assign_1_0_2_fu_694_p2;
reg   [31:0] col_assign_1_0_2_reg_1390;
wire   [0:0] sel_tmp3_fu_706_p2;
reg   [0:0] sel_tmp3_reg_1415;
reg   [0:0] ap_reg_ppstg_sel_tmp3_reg_1415_pp0_it1;
wire   [0:0] sel_tmp6_fu_717_p2;
reg   [0:0] sel_tmp6_reg_1420;
reg   [0:0] ap_reg_ppstg_sel_tmp6_reg_1420_pp0_it1;
wire   [0:0] sel_tmp9_fu_728_p2;
reg   [0:0] sel_tmp9_reg_1425;
reg   [0:0] ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1;
wire   [31:0] pixConvolved_2_fu_739_p3;
reg   [31:0] pixConvolved_2_reg_1430;
reg   [7:0] lineBuff_val_0_load_1_reg_1435;
wire   [7:0] lineBuff_val_1_q0;
reg   [7:0] lineBuff_val_1_load_1_reg_1445;
wire   [7:0] lineBuff_val_1_q1;
reg   [7:0] lineBuff_val_1_load_2_reg_1450;
wire   [7:0] lineBuff_val_2_q0;
reg   [7:0] lineBuff_val_2_load_1_reg_1460;
wire   [7:0] lineBuff_val_2_q1;
reg   [7:0] lineBuff_val_2_load_2_reg_1465;
wire   [15:0] window_val_0_0_fu_760_p2;
reg   [15:0] window_val_0_0_reg_1475;
reg   [7:0] lineBuff_val_1_load_3_reg_1480;
reg   [7:0] lineBuff_val_2_load_3_reg_1485;
wire   [7:0] tmp_14_fu_766_p1;
reg   [7:0] tmp_14_reg_1490;
wire   [15:0] tmp4_fu_783_p2;
reg   [15:0] tmp4_reg_1498;
wire   [7:0] tmp_15_fu_788_p1;
reg   [7:0] tmp_15_reg_1503;
wire   [15:0] window_val_0_2_fu_800_p2;
reg   [15:0] window_val_0_2_reg_1511;
wire   [7:0] tmp_16_fu_806_p1;
reg   [7:0] tmp_16_reg_1516;
wire   [15:0] window_val_1_0_fu_817_p2;
reg   [15:0] window_val_1_0_reg_1524;
wire   [7:0] valInWindow_0_minVal_1_0_2_i_fu_838_p3;
reg   [7:0] valInWindow_0_minVal_1_0_2_i_reg_1529;
wire   [7:0] tmp_17_fu_845_p1;
reg   [7:0] tmp_17_reg_1535;
wire   [7:0] valInWindow_0_maxVal_1_0_2_i_fu_864_p3;
reg   [7:0] valInWindow_0_maxVal_1_0_2_i_reg_1543;
wire   [15:0] window_val_1_1_fu_878_p2;
reg   [15:0] window_val_1_1_reg_1549;
wire   [7:0] valInWindow_0_minVal_1_1_i_fu_888_p3;
reg   [7:0] valInWindow_0_minVal_1_1_i_reg_1554;
wire   [7:0] tmp_18_fu_894_p1;
reg   [7:0] tmp_18_reg_1560;
wire   [7:0] valInWindow_0_maxVal_1_1_i_fu_902_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_i_reg_1568;
wire   [15:0] window_val_1_2_fu_915_p2;
reg   [15:0] window_val_1_2_reg_1574;
wire   [7:0] valInWindow_0_minVal_1_1_1_i_fu_925_p3;
reg   [7:0] valInWindow_0_minVal_1_1_1_i_reg_1579;
wire   [7:0] tmp_19_fu_931_p1;
reg   [7:0] tmp_19_reg_1585;
wire   [7:0] valInWindow_0_maxVal_1_1_1_i_fu_939_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_1_i_reg_1593;
wire   [15:0] window_val_2_0_fu_952_p2;
reg   [15:0] window_val_2_0_reg_1599;
wire   [7:0] valInWindow_0_minVal_1_1_2_i_fu_962_p3;
reg   [7:0] valInWindow_0_minVal_1_1_2_i_reg_1604;
wire   [7:0] tmp_20_fu_968_p1;
reg   [7:0] tmp_20_reg_1610;
wire   [7:0] valInWindow_0_maxVal_1_1_2_i_fu_976_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_2_i_reg_1618;
wire   [15:0] tmp1_fu_995_p2;
reg   [15:0] tmp1_reg_1624;
wire   [7:0] valInWindow_0_minVal_1_2_i_fu_1004_p3;
reg   [7:0] valInWindow_0_minVal_1_2_i_reg_1629;
wire   [7:0] tmp_21_fu_1010_p1;
reg   [7:0] tmp_21_reg_1635;
wire   [7:0] valInWindow_0_maxVal_1_2_i_fu_1018_p3;
reg   [7:0] valInWindow_0_maxVal_1_2_i_reg_1643;
wire   [15:0] window_val_2_2_fu_1031_p2;
reg   [15:0] window_val_2_2_reg_1649;
wire   [15:0] tmp3_fu_1041_p2;
reg   [15:0] tmp3_reg_1654;
wire   [7:0] valInWindow_0_minVal_1_2_1_i_fu_1050_p3;
reg   [7:0] valInWindow_0_minVal_1_2_1_i_reg_1659;
wire   [7:0] tmp_22_fu_1056_p1;
reg   [7:0] tmp_22_reg_1665;
wire   [7:0] valInWindow_0_maxVal_1_2_1_i_fu_1064_p3;
reg   [7:0] valInWindow_0_maxVal_1_2_1_i_reg_1673;
wire   [15:0] valOutput_fu_1084_p2;
reg   [15:0] valOutput_reg_1679;
reg   [0:0] tmp_6_reg_1684;
reg   [12:0] tmp_9_reg_1689;
wire   [7:0] sel_tmp10_fu_1134_p3;
reg   [7:0] sel_tmp10_reg_1694;
wire   [9:0] countWait_2_fu_1217_p2;
reg    ap_sig_cseq_ST_st17_fsm_10;
reg    ap_sig_bdd_522;
wire   [0:0] exitcond_fu_1211_p2;
reg   [9:0] lineBuff_val_0_address0;
reg    lineBuff_val_0_ce0;
reg    lineBuff_val_0_we0;
wire   [7:0] lineBuff_val_0_d0;
reg   [9:0] lineBuff_val_0_address1;
reg    lineBuff_val_0_ce1;
reg   [9:0] lineBuff_val_1_address0;
reg    lineBuff_val_1_ce0;
reg    lineBuff_val_1_we0;
wire   [7:0] lineBuff_val_1_d0;
reg   [9:0] lineBuff_val_1_address1;
reg    lineBuff_val_1_ce1;
reg   [9:0] lineBuff_val_2_address0;
reg    lineBuff_val_2_ce0;
reg    lineBuff_val_2_we0;
wire   [7:0] lineBuff_val_2_d0;
reg   [9:0] lineBuff_val_2_address1;
reg    lineBuff_val_2_ce1;
reg   [31:0] col_assign_phi_fu_467_p4;
reg   [31:0] idxRow_phi_fu_478_p4;
reg   [31:0] pixConvolved_phi_fu_489_p4;
reg   [18:0] countWait_phi_fu_501_p4;
reg   [9:0] countWait_1_reg_508;
wire   [63:0] tmp_7_fu_681_p1;
wire   [63:0] tmp_25_0_1_fu_688_p1;
wire   [63:0] tmp_25_0_2_fu_746_p1;
wire   [7:0] tmp_data_V_fu_1204_p3;
wire   [0:0] tmp_last_V_fu_1223_p2;
reg    ap_reg_ioackin_outStream_TREADY = 1'b0;
wire   [30:0] tmp_3_fu_566_p4;
wire   [30:0] tmp_4_fu_582_p4;
wire   [0:0] icmp_fu_576_p2;
wire   [0:0] icmp4_fu_592_p2;
wire   [31:0] idxCol_fu_610_p2;
wire   [31:0] idxRow_2_fu_616_p2;
wire   [31:0] sel_tmp1_fu_700_p3;
wire   [31:0] sel_tmp4_fu_710_p3;
wire   [31:0] sel_tmp7_fu_721_p3;
wire   [31:0] pixConvolved_1_fu_732_p3;
wire  signed [7:0] window_val_0_0_fu_760_p0;
wire   [7:0] window_val_0_0_fu_760_p1;
wire  signed [7:0] window_val_0_1_fu_777_p0;
wire   [7:0] window_val_0_1_fu_777_p1;
wire   [15:0] window_val_0_1_fu_777_p2;
wire  signed [7:0] window_val_0_2_fu_800_p0;
wire   [7:0] window_val_0_2_fu_800_p1;
wire  signed [7:0] window_val_1_0_fu_817_p0;
wire   [7:0] window_val_1_0_fu_817_p1;
wire   [0:0] tmp_5_0_1_i_fu_823_p2;
wire   [7:0] valInWindow_0_minVal_1_0_1_i_fu_827_p3;
wire   [0:0] tmp_5_0_2_i_fu_833_p2;
wire   [0:0] tmp_11_0_1_i_fu_849_p2;
wire   [7:0] valInWindow_0_maxVal_1_0_1_i_fu_853_p3;
wire   [0:0] tmp_11_0_2_i_fu_859_p2;
wire  signed [7:0] window_val_1_1_fu_878_p0;
wire   [7:0] window_val_1_1_fu_878_p1;
wire   [0:0] tmp_5_1_i_fu_884_p2;
wire   [0:0] tmp_11_1_i_fu_898_p2;
wire  signed [7:0] window_val_1_2_fu_915_p0;
wire   [7:0] window_val_1_2_fu_915_p1;
wire   [0:0] tmp_5_1_1_i_fu_921_p2;
wire   [0:0] tmp_11_1_1_i_fu_935_p2;
wire  signed [7:0] window_val_2_0_fu_952_p0;
wire   [7:0] window_val_2_0_fu_952_p1;
wire   [0:0] tmp_5_1_2_i_fu_958_p2;
wire   [0:0] tmp_11_1_2_i_fu_972_p2;
wire  signed [7:0] window_val_2_1_fu_989_p0;
wire   [7:0] window_val_2_1_fu_989_p1;
wire   [15:0] window_val_2_1_fu_989_p2;
wire   [0:0] tmp_5_2_i_fu_1000_p2;
wire   [0:0] tmp_11_2_i_fu_1014_p2;
wire  signed [7:0] window_val_2_2_fu_1031_p0;
wire   [7:0] window_val_2_2_fu_1031_p1;
wire   [15:0] tmp2_fu_1037_p2;
wire   [0:0] tmp_5_2_1_i_fu_1046_p2;
wire   [0:0] tmp_11_2_1_i_fu_1060_p2;
wire   [15:0] tmp5_fu_1070_p2;
wire   [15:0] tmp6_fu_1074_p2;
wire   [15:0] tmp7_fu_1079_p2;
wire   [0:0] tmp_5_2_2_i_fu_1107_p2;
wire   [0:0] tmp_11_2_2_i_fu_1117_p2;
wire   [7:0] valInWindow_0_maxVal_1_2_2_i_fu_1121_p3;
wire   [7:0] valInWindow_0_minVal_1_2_2_i_fu_1111_p3;
wire   [7:0] sel_tmp_fu_1127_p3;
wire  signed [16:0] tmp_18_tr_fu_1141_p1;
wire   [16:0] p_neg_fu_1144_p2;
wire   [13:0] tmp_8_fu_1150_p4;
wire   [14:0] tmp_7_cast_fu_1160_p1;
wire  signed [13:0] tmp_1_fu_1164_p1;
wire   [14:0] tmp_2_fu_1167_p2;
wire   [14:0] tmp_10_cast_fu_1173_p1;
wire   [14:0] valOutput_1_fu_1177_p3;
wire   [0:0] tmp_13_fu_1188_p3;
wire   [7:0] tmp_10_fu_1184_p1;
wire   [7:0] p_s_fu_1196_p3;
reg   [10:0] ap_NS_fsm;
wire   [15:0] window_val_0_0_fu_760_p10;
wire   [15:0] window_val_0_1_fu_777_p10;
wire   [15:0] window_val_0_2_fu_800_p10;
wire   [15:0] window_val_1_0_fu_817_p10;
wire   [15:0] window_val_1_1_fu_878_p10;
wire   [15:0] window_val_1_2_fu_915_p10;
wire   [15:0] window_val_2_0_fu_952_p10;
wire   [15:0] window_val_2_1_fu_989_p10;
wire   [15:0] window_val_2_2_fu_1031_p10;
reg    ap_sig_bdd_1214;


doImgProc_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
doImgProc_CRTL_BUS_s_axi_U(
    .AWVALID( s_axi_CRTL_BUS_AWVALID ),
    .AWREADY( s_axi_CRTL_BUS_AWREADY ),
    .AWADDR( s_axi_CRTL_BUS_AWADDR ),
    .WVALID( s_axi_CRTL_BUS_WVALID ),
    .WREADY( s_axi_CRTL_BUS_WREADY ),
    .WDATA( s_axi_CRTL_BUS_WDATA ),
    .WSTRB( s_axi_CRTL_BUS_WSTRB ),
    .ARVALID( s_axi_CRTL_BUS_ARVALID ),
    .ARREADY( s_axi_CRTL_BUS_ARREADY ),
    .ARADDR( s_axi_CRTL_BUS_ARADDR ),
    .RVALID( s_axi_CRTL_BUS_RVALID ),
    .RREADY( s_axi_CRTL_BUS_RREADY ),
    .RDATA( s_axi_CRTL_BUS_RDATA ),
    .RRESP( s_axi_CRTL_BUS_RRESP ),
    .BVALID( s_axi_CRTL_BUS_BVALID ),
    .BREADY( s_axi_CRTL_BUS_BREADY ),
    .BRESP( s_axi_CRTL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( doImgProc_CRTL_BUS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .operation( operation )
);

doImgProc_KERNEL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_KERNEL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_KERNEL_BUS_DATA_WIDTH ))
doImgProc_KERNEL_BUS_s_axi_U(
    .AWVALID( s_axi_KERNEL_BUS_AWVALID ),
    .AWREADY( s_axi_KERNEL_BUS_AWREADY ),
    .AWADDR( s_axi_KERNEL_BUS_AWADDR ),
    .WVALID( s_axi_KERNEL_BUS_WVALID ),
    .WREADY( s_axi_KERNEL_BUS_WREADY ),
    .WDATA( s_axi_KERNEL_BUS_WDATA ),
    .WSTRB( s_axi_KERNEL_BUS_WSTRB ),
    .ARVALID( s_axi_KERNEL_BUS_ARVALID ),
    .ARREADY( s_axi_KERNEL_BUS_ARREADY ),
    .ARADDR( s_axi_KERNEL_BUS_ARADDR ),
    .RVALID( s_axi_KERNEL_BUS_RVALID ),
    .RREADY( s_axi_KERNEL_BUS_RREADY ),
    .RDATA( s_axi_KERNEL_BUS_RDATA ),
    .RRESP( s_axi_KERNEL_BUS_RRESP ),
    .BVALID( s_axi_KERNEL_BUS_BVALID ),
    .BREADY( s_axi_KERNEL_BUS_BREADY ),
    .BRESP( s_axi_KERNEL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( doImgProc_KERNEL_BUS_s_axi_U_ap_dummy_ce ),
    .kernel_address0( kernel_address0 ),
    .kernel_ce0( kernel_ce0 ),
    .kernel_q0( kernel_q0 )
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 696 ),
    .AddressWidth( 10 ))
lineBuff_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( lineBuff_val_0_address0 ),
    .ce0( lineBuff_val_0_ce0 ),
    .we0( lineBuff_val_0_we0 ),
    .d0( lineBuff_val_0_d0 ),
    .q0( lineBuff_val_0_q0 ),
    .address1( lineBuff_val_0_address1 ),
    .ce1( lineBuff_val_0_ce1 ),
    .q1( lineBuff_val_0_q1 )
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 696 ),
    .AddressWidth( 10 ))
lineBuff_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( lineBuff_val_1_address0 ),
    .ce0( lineBuff_val_1_ce0 ),
    .we0( lineBuff_val_1_we0 ),
    .d0( lineBuff_val_1_d0 ),
    .q0( lineBuff_val_1_q0 ),
    .address1( lineBuff_val_1_address1 ),
    .ce1( lineBuff_val_1_ce1 ),
    .q1( lineBuff_val_1_q1 )
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 696 ),
    .AddressWidth( 10 ))
lineBuff_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( lineBuff_val_2_address0 ),
    .ce0( lineBuff_val_2_ce0 ),
    .we0( lineBuff_val_2_we0 ),
    .d0( lineBuff_val_2_d0 ),
    .q0( lineBuff_val_2_q0 ),
    .address1( lineBuff_val_2_address1 ),
    .ce1( lineBuff_val_2_ce1 ),
    .q1( lineBuff_val_2_q1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_outStream_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2) & ~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY))))) begin
            ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_1 == outStream_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2) & (ap_const_logic_1 == outStream_TREADY)))) begin
            ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_554_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & ~(exitcond1_reg_1290 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        col_assign_reg_463 <= idxCol_1_reg_1322;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        col_assign_reg_463 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_554_p2))) begin
        countWait_1_reg_508 <= ap_const_lv10_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2) & ~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2)))) begin
        countWait_1_reg_508 <= countWait_2_fu_1217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        countWait_reg_497 <= phitmp_reg_1336;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        countWait_reg_497 <= ap_const_lv19_1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        idxRow_reg_474 <= idxRow_1_reg_1327;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        idxRow_reg_474 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        pixConvolved_reg_485 <= pixConvolved_2_reg_1430;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        pixConvolved_reg_485 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (ap_sig_bdd_1214) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) begin
            reg_527 <= lineBuff_val_0_q1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            reg_527 <= lineBuff_val_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_1290_pp0_it1 <= exitcond1_reg_1290;
        ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 <= tmp_12_reg_1332;
        exitcond1_reg_1290 <= exitcond1_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
        ap_reg_ppstg_sel_tmp3_reg_1415_pp0_it1 <= sel_tmp3_reg_1415;
        ap_reg_ppstg_sel_tmp6_reg_1420_pp0_it1 <= sel_tmp6_reg_1420;
        ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1 <= sel_tmp9_reg_1425;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        ap_reg_ppstg_tmp_dest_V_1_reg_1365_pp0_it1 <= tmp_dest_V_1_reg_1365;
        ap_reg_ppstg_tmp_id_V_1_reg_1359_pp0_it1 <= tmp_id_V_1_reg_1359;
        ap_reg_ppstg_tmp_keep_V_1_reg_1341_pp0_it1 <= tmp_keep_V_1_reg_1341;
        ap_reg_ppstg_tmp_strb_V_1_reg_1347_pp0_it1 <= tmp_strb_V_1_reg_1347;
        ap_reg_ppstg_tmp_user_V_1_reg_1353_pp0_it1 <= tmp_user_V_1_reg_1353;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        col_assign_1_0_2_reg_1390 <= col_assign_1_0_2_fu_694_p2;
        sel_tmp3_reg_1415 <= sel_tmp3_fu_706_p2;
        sel_tmp6_reg_1420 <= sel_tmp6_fu_717_p2;
        sel_tmp9_reg_1425 <= sel_tmp9_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_554_p2))) begin
        idxCol_1_reg_1322 <= idxCol_1_fu_622_p3;
        idxRow_1_reg_1327 <= idxRow_1_fu_630_p3;
        phitmp_reg_1336 <= phitmp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        lineBuff_val_0_load_1_reg_1435 <= lineBuff_val_0_q1;
        lineBuff_val_1_load_1_reg_1445 <= lineBuff_val_1_q0;
        lineBuff_val_1_load_2_reg_1450 <= lineBuff_val_1_q1;
        lineBuff_val_2_load_1_reg_1460 <= lineBuff_val_2_q0;
        lineBuff_val_2_load_2_reg_1465 <= lineBuff_val_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_554_p2))) begin
        lineBuff_val_1_addr_reg_1299 <= tmp_s_fu_560_p1;
        lineBuff_val_2_addr_reg_1304 <= tmp_s_fu_560_p1;
        or_cond_reg_1309 <= or_cond_fu_598_p2;
        tmp_11_reg_1317 <= tmp_11_fu_604_p2;
        tmp_12_reg_1332 <= tmp_12_fu_638_p2;
        tmp_s_reg_1294[31 : 0] <= tmp_s_fu_560_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5))) begin
        lineBuff_val_1_load_3_reg_1480 <= lineBuff_val_1_q1;
        lineBuff_val_2_load_3_reg_1485 <= lineBuff_val_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        pixConvolved_2_reg_1430 <= pixConvolved_2_fu_739_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        pixConvolved_3_reg_1371 <= pixConvolved_3_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)))) begin
        reg_519 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)))) begin
        reg_523 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        reg_532 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1))) begin
        sel_tmp10_reg_1694 <= sel_tmp10_fu_1134_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        sel_tmp2_reg_1275 <= sel_tmp2_fu_536_p2;
        sel_tmp5_reg_1280 <= sel_tmp5_fu_542_p2;
        sel_tmp8_reg_1285 <= sel_tmp8_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & ~(ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        tmp1_reg_1624 <= tmp1_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1))) begin
        tmp3_reg_1654 <= tmp3_fu_1041_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & ~(ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp4_reg_1498 <= tmp4_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_14_reg_1490 <= tmp_14_fu_766_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_15_reg_1503 <= tmp_15_fu_788_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_16_reg_1516 <= tmp_16_fu_806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_17_reg_1535 <= tmp_17_fu_845_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_18_reg_1560 <= tmp_18_fu_894_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == sel_tmp9_reg_1425))) begin
        tmp_19_reg_1585 <= tmp_19_fu_931_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        tmp_20_reg_1610 <= tmp_20_fu_968_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        tmp_21_reg_1635 <= tmp_21_fu_1010_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1))) begin
        tmp_22_reg_1665 <= tmp_22_fu_1056_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1))) begin
        tmp_6_reg_1684 <= valOutput_fu_1084_p2[ap_const_lv32_F];
        tmp_9_reg_1689 <= {{valOutput_fu_1084_p2[ap_const_lv32_F : ap_const_lv32_3]}};
        valOutput_reg_1679 <= valOutput_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        tmp_dest_V_1_reg_1365 <= inStream_TDEST;
        tmp_id_V_1_reg_1359 <= inStream_TID;
        tmp_keep_V_1_reg_1341 <= inStream_TKEEP;
        tmp_strb_V_1_reg_1347 <= inStream_TSTRB;
        tmp_user_V_1_reg_1353 <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        tmp_dest_V_reg_450 <= ap_reg_ppstg_tmp_dest_V_1_reg_1365_pp0_it1;
        tmp_id_V_reg_398 <= ap_reg_ppstg_tmp_id_V_1_reg_1359_pp0_it1;
        tmp_keep_V_reg_437 <= ap_reg_ppstg_tmp_keep_V_1_reg_1341_pp0_it1;
        tmp_strb_V_reg_424 <= ap_reg_ppstg_tmp_strb_V_1_reg_1347_pp0_it1;
        tmp_user_V_reg_411 <= ap_reg_ppstg_tmp_user_V_1_reg_1353_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == sel_tmp6_reg_1420) & ~(ap_const_lv1_0 == sel_tmp3_reg_1415))) begin
        valInWindow_0_maxVal_1_0_2_i_reg_1543 <= valInWindow_0_maxVal_1_0_2_i_fu_864_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == sel_tmp6_reg_1420) & ~(ap_const_lv1_0 == sel_tmp3_reg_1415))) begin
        valInWindow_0_maxVal_1_1_1_i_reg_1593 <= valInWindow_0_maxVal_1_1_1_i_fu_939_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == sel_tmp6_reg_1420) & ~(ap_const_lv1_0 == sel_tmp3_reg_1415) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        valInWindow_0_maxVal_1_1_2_i_reg_1618 <= valInWindow_0_maxVal_1_1_2_i_fu_976_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == sel_tmp6_reg_1420) & ~(ap_const_lv1_0 == sel_tmp3_reg_1415))) begin
        valInWindow_0_maxVal_1_1_i_reg_1568 <= valInWindow_0_maxVal_1_1_i_fu_902_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_sel_tmp6_reg_1420_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_sel_tmp3_reg_1415_pp0_it1))) begin
        valInWindow_0_maxVal_1_2_1_i_reg_1673 <= valInWindow_0_maxVal_1_2_1_i_fu_1064_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & (ap_const_lv1_0 == sel_tmp6_reg_1420) & ~(ap_const_lv1_0 == sel_tmp3_reg_1415) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        valInWindow_0_maxVal_1_2_i_reg_1643 <= valInWindow_0_maxVal_1_2_i_fu_1018_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & ~(ap_const_lv1_0 == sel_tmp6_reg_1420))) begin
        valInWindow_0_minVal_1_0_2_i_reg_1529 <= valInWindow_0_minVal_1_0_2_i_fu_838_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & ~(ap_const_lv1_0 == sel_tmp6_reg_1420))) begin
        valInWindow_0_minVal_1_1_1_i_reg_1579 <= valInWindow_0_minVal_1_1_1_i_fu_925_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & ~(ap_const_lv1_0 == sel_tmp6_reg_1420) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        valInWindow_0_minVal_1_1_2_i_reg_1604 <= valInWindow_0_minVal_1_1_2_i_fu_962_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & ~(ap_const_lv1_0 == sel_tmp6_reg_1420))) begin
        valInWindow_0_minVal_1_1_i_reg_1554 <= valInWindow_0_minVal_1_1_i_fu_888_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_sel_tmp6_reg_1420_pp0_it1))) begin
        valInWindow_0_minVal_1_2_1_i_reg_1659 <= valInWindow_0_minVal_1_2_1_i_fu_1050_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_const_lv1_0 == sel_tmp9_reg_1425) & ~(ap_const_lv1_0 == sel_tmp6_reg_1420) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        valInWindow_0_minVal_1_2_i_reg_1629 <= valInWindow_0_minVal_1_2_i_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5))) begin
        window_val_0_0_reg_1475 <= window_val_0_0_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7))) begin
        window_val_0_2_reg_1511 <= window_val_0_2_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8))) begin
        window_val_1_0_reg_1524 <= window_val_1_0_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
        window_val_1_1_reg_1549 <= window_val_1_1_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        window_val_1_2_reg_1574 <= window_val_1_2_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        window_val_2_0_reg_1599 <= window_val_2_0_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        window_val_2_2_reg_1649 <= window_val_2_2_fu_1031_p2;
    end
end

always @ (ap_sig_ioackin_outStream_TREADY or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & ~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2)) & ~(ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_ioackin_outStream_TREADY or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & ~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2)) & ~(ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_255) begin
    if (ap_sig_bdd_255) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_150) begin
    if (ap_sig_bdd_150) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_193) begin
    if (ap_sig_bdd_193) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_234) begin
    if (ap_sig_bdd_234) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_172) begin
    if (ap_sig_bdd_172) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_202) begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_245) begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_182) begin
    if (ap_sig_bdd_182) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_222) begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_522) begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st17_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_29) begin
    if (ap_sig_bdd_29) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (outStream_TREADY or ap_reg_ioackin_outStream_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_outStream_TREADY)) begin
        ap_sig_ioackin_outStream_TREADY = outStream_TREADY;
    end else begin
        ap_sig_ioackin_outStream_TREADY = ap_const_logic_1;
    end
end

always @ (col_assign_reg_463 or exitcond1_reg_1290 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or idxCol_1_reg_1322) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        col_assign_phi_fu_467_p4 = idxCol_1_reg_1322;
    end else begin
        col_assign_phi_fu_467_p4 = col_assign_reg_463;
    end
end

always @ (countWait_reg_497 or exitcond1_reg_1290 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or phitmp_reg_1336) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        countWait_phi_fu_501_p4 = phitmp_reg_1336;
    end else begin
        countWait_phi_fu_501_p4 = countWait_reg_497;
    end
end

always @ (idxRow_reg_474 or exitcond1_reg_1290 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or idxRow_1_reg_1327) begin
    if (((exitcond1_reg_1290 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        idxRow_phi_fu_478_p4 = idxRow_1_reg_1327;
    end else begin
        idxRow_phi_fu_478_p4 = idxRow_reg_474;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_1290 or ap_sig_bdd_160) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        inStream_TREADY = ap_const_logic_1;
    end else begin
        inStream_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or kernel_addr_reg_1230 or kernel_addr_1_reg_1235 or kernel_addr_2_reg_1240 or kernel_addr_3_reg_1245 or kernel_addr_4_reg_1250 or kernel_addr_5_reg_1255 or kernel_addr_6_reg_1260 or kernel_addr_7_reg_1265 or kernel_addr_8_reg_1270) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) begin
            kernel_address0 = kernel_addr_8_reg_1270;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) begin
            kernel_address0 = kernel_addr_7_reg_1265;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) begin
            kernel_address0 = kernel_addr_6_reg_1260;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) begin
            kernel_address0 = kernel_addr_5_reg_1255;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) begin
            kernel_address0 = kernel_addr_4_reg_1250;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            kernel_address0 = kernel_addr_3_reg_1245;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            kernel_address0 = kernel_addr_2_reg_1240;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            kernel_address0 = kernel_addr_1_reg_1235;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            kernel_address0 = kernel_addr_reg_1230;
        end else begin
            kernel_address0 = 'bx;
        end
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_160 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_sig_ioackin_outStream_TREADY or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        kernel_ce0 = ap_const_logic_1;
    end else begin
        kernel_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or tmp_s_reg_1294 or tmp_7_fu_681_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_0_address0 = tmp_s_reg_1294;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_0_address0 = tmp_7_fu_681_p1;
        end else begin
            lineBuff_val_0_address0 = 'bx;
        end
    end else begin
        lineBuff_val_0_address0 = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or tmp_25_0_1_fu_688_p1 or tmp_25_0_2_fu_746_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_0_address1 = tmp_25_0_2_fu_746_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_0_address1 = tmp_25_0_1_fu_688_p1;
        end else begin
            lineBuff_val_0_address1 = 'bx;
        end
    end else begin
        lineBuff_val_0_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_160 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)))) begin
        lineBuff_val_0_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_0_ce1 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_1290 or ap_sig_bdd_160) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        lineBuff_val_0_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or tmp_s_fu_560_p1 or lineBuff_val_1_addr_reg_1299 or tmp_7_fu_681_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_1299;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_1_address0 = tmp_7_fu_681_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            lineBuff_val_1_address0 = tmp_s_fu_560_p1;
        end else begin
            lineBuff_val_1_address0 = 'bx;
        end
    end else begin
        lineBuff_val_1_address0 = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or tmp_25_0_1_fu_688_p1 or tmp_25_0_2_fu_746_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_1_address1 = tmp_25_0_2_fu_746_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_1_address1 = tmp_25_0_1_fu_688_p1;
        end else begin
            lineBuff_val_1_address1 = 'bx;
        end
    end else begin
        lineBuff_val_1_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_160 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        lineBuff_val_1_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_1_ce1 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_1290 or ap_sig_bdd_160) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        lineBuff_val_1_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or tmp_s_fu_560_p1 or lineBuff_val_2_addr_reg_1304 or tmp_7_fu_681_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_1304;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_2_address0 = tmp_7_fu_681_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            lineBuff_val_2_address0 = tmp_s_fu_560_p1;
        end else begin
            lineBuff_val_2_address0 = 'bx;
        end
    end else begin
        lineBuff_val_2_address0 = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or tmp_25_0_1_fu_688_p1 or tmp_25_0_2_fu_746_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_2_address1 = tmp_25_0_2_fu_746_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_2_address1 = tmp_25_0_1_fu_688_p1;
        end else begin
            lineBuff_val_2_address1 = 'bx;
        end
    end else begin
        lineBuff_val_2_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_160 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        lineBuff_val_2_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_2_ce1 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_1290 or ap_sig_bdd_160) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160))) begin
        lineBuff_val_2_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2 or tmp_data_V_fu_1204_p3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TDATA = ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TDATA = tmp_data_V_fu_1204_p3;
    end else begin
        outStream_TDATA = 'bx;
    end
end

always @ (tmp_dest_V_reg_450 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_reg_ppstg_tmp_dest_V_1_reg_1365_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TDEST = tmp_dest_V_reg_450;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TDEST = ap_reg_ppstg_tmp_dest_V_1_reg_1365_pp0_it1;
    end else begin
        outStream_TDEST = 'bx;
    end
end

always @ (tmp_id_V_reg_398 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_reg_ppstg_tmp_id_V_1_reg_1359_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TID = tmp_id_V_reg_398;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TID = ap_reg_ppstg_tmp_id_V_1_reg_1359_pp0_it1;
    end else begin
        outStream_TID = 'bx;
    end
end

always @ (tmp_keep_V_reg_437 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_reg_ppstg_tmp_keep_V_1_reg_1341_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TKEEP = tmp_keep_V_reg_437;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TKEEP = ap_reg_ppstg_tmp_keep_V_1_reg_1341_pp0_it1;
    end else begin
        outStream_TKEEP = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2 or tmp_last_V_fu_1223_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TLAST = tmp_last_V_fu_1223_p2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TLAST = ap_const_lv1_0;
    end else begin
        outStream_TLAST = 'bx;
    end
end

always @ (tmp_strb_V_reg_424 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_reg_ppstg_tmp_strb_V_1_reg_1347_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TSTRB = tmp_strb_V_reg_424;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TSTRB = ap_reg_ppstg_tmp_strb_V_1_reg_1347_pp0_it1;
    end else begin
        outStream_TSTRB = 'bx;
    end
end

always @ (tmp_user_V_reg_411 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_reg_ppstg_tmp_user_V_1_reg_1353_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
        outStream_TUSER = tmp_user_V_reg_411;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1))) begin
        outStream_TUSER = ap_reg_ppstg_tmp_user_V_1_reg_1353_pp0_it1;
    end else begin
        outStream_TUSER = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_sig_cseq_ST_st17_fsm_10 or exitcond_fu_1211_p2 or ap_reg_ioackin_outStream_TREADY) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_reg_ioackin_outStream_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_10) & (ap_const_lv1_0 == exitcond_fu_1211_p2) & (ap_const_logic_0 == ap_reg_ioackin_outStream_TREADY)))) begin
        outStream_TVALID = ap_const_logic_1;
    end else begin
        outStream_TVALID = ap_const_logic_0;
    end
end

always @ (pixConvolved_reg_485 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_1290_pp0_it1 or pixConvolved_2_reg_1430) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_1290_pp0_it1))) begin
        pixConvolved_phi_fu_489_p4 = pixConvolved_2_reg_1430;
    end else begin
        pixConvolved_phi_fu_489_p4 = pixConvolved_reg_485;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_160 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_reg_ppstg_tmp_12_reg_1332_pp0_it1 or ap_sig_ioackin_outStream_TREADY or exitcond1_fu_554_p2 or exitcond_fu_1211_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond1_fu_554_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_160)) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
        end
        ap_ST_pp0_stg4_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
        end
        ap_ST_pp0_stg5_fsm_6 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0)))) begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_12_reg_1332_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            end
        end
        ap_ST_pp0_stg6_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
        end
        ap_ST_pp0_stg7_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_9;
        end
        ap_ST_pp0_stg8_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st17_fsm_10 : 
        begin
            if ((~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2)) & ~(ap_const_lv1_0 == exitcond_fu_1211_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == exitcond_fu_1211_p2) & ~((ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_lv1_0 == exitcond_fu_1211_p2)))) begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_reg_ppiten_pp0_it0 or exitcond1_reg_1290) begin
    ap_sig_bdd_1214 = ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1290 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_150 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (inStream_TVALID or exitcond1_reg_1290) begin
    ap_sig_bdd_160 = ((inStream_TVALID == ap_const_logic_0) & (exitcond1_reg_1290 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_172 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_182 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_193 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_255 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_29 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

assign col_assign_1_0_2_fu_694_p2 = (ap_const_lv32_2 + pixConvolved_reg_485);

assign countWait_2_fu_1217_p2 = (countWait_1_reg_508 + ap_const_lv10_1);

assign doImgProc_CRTL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign doImgProc_KERNEL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign exitcond1_fu_554_p2 = (countWait_phi_fu_501_p4 == ap_const_lv19_4AC41? 1'b1: 1'b0);

assign exitcond_fu_1211_p2 = (countWait_1_reg_508 == ap_const_lv10_2B9? 1'b1: 1'b0);

assign icmp4_fu_592_p2 = ($signed(tmp_4_fu_582_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);

assign icmp_fu_576_p2 = ($signed(tmp_3_fu_566_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);

assign idxCol_1_fu_622_p3 = ((tmp_11_fu_604_p2[0:0] === 1'b1) ? idxCol_fu_610_p2 : ap_const_lv32_0);

assign idxCol_fu_610_p2 = (ap_const_lv32_1 + col_assign_phi_fu_467_p4);

assign idxRow_1_fu_630_p3 = ((tmp_11_fu_604_p2[0:0] === 1'b1) ? idxRow_phi_fu_478_p4 : idxRow_2_fu_616_p2);

assign idxRow_2_fu_616_p2 = (ap_const_lv32_1 + idxRow_phi_fu_478_p4);

assign kernel_addr_1_gep_fu_223_p3 = ap_const_lv64_1;

assign kernel_addr_2_gep_fu_231_p3 = ap_const_lv64_2;

assign kernel_addr_3_gep_fu_239_p3 = ap_const_lv64_3;

assign kernel_addr_4_gep_fu_247_p3 = ap_const_lv64_4;

assign kernel_addr_5_gep_fu_255_p3 = ap_const_lv64_5;

assign kernel_addr_6_gep_fu_263_p3 = ap_const_lv64_6;

assign kernel_addr_7_gep_fu_271_p3 = ap_const_lv64_7;

assign kernel_addr_8_gep_fu_279_p3 = ap_const_lv64_8;

assign kernel_addr_gep_fu_215_p3 = ap_const_lv64_0;

assign lineBuff_val_0_d0 = lineBuff_val_1_q0;

assign lineBuff_val_1_d0 = lineBuff_val_2_q0;

assign lineBuff_val_2_d0 = inStream_TDATA;

assign or_cond_fu_598_p2 = (icmp_fu_576_p2 & icmp4_fu_592_p2);

assign p_neg_fu_1144_p2 = ($signed(ap_const_lv17_0) - $signed(tmp_18_tr_fu_1141_p1));

assign p_s_fu_1196_p3 = ((tmp_13_fu_1188_p3[0:0] === 1'b1) ? ap_const_lv8_0 : tmp_10_fu_1184_p1);

assign phitmp_fu_644_p2 = (countWait_phi_fu_501_p4 + ap_const_lv19_1);

assign pixConvolved_1_fu_732_p3 = ((sel_tmp9_fu_728_p2[0:0] === 1'b1) ? pixConvolved_3_reg_1371 : sel_tmp7_fu_721_p3);

assign pixConvolved_2_fu_739_p3 = ((tmp_11_reg_1317[0:0] === 1'b1) ? pixConvolved_1_fu_732_p3 : ap_const_lv32_0);

assign pixConvolved_3_fu_675_p2 = (ap_const_lv32_1 + pixConvolved_phi_fu_489_p4);

assign sel_tmp10_fu_1134_p3 = ((ap_reg_ppstg_sel_tmp6_reg_1420_pp0_it1[0:0] === 1'b1) ? valInWindow_0_minVal_1_2_2_i_fu_1111_p3 : sel_tmp_fu_1127_p3);

assign sel_tmp1_fu_700_p3 = ((or_cond_reg_1309[0:0] === 1'b1) ? pixConvolved_3_reg_1371 : pixConvolved_reg_485);

assign sel_tmp2_fu_536_p2 = (operation == ap_const_lv32_2? 1'b1: 1'b0);

assign sel_tmp3_fu_706_p2 = (or_cond_reg_1309 & sel_tmp2_reg_1275);

assign sel_tmp4_fu_710_p3 = ((sel_tmp3_fu_706_p2[0:0] === 1'b1) ? pixConvolved_3_reg_1371 : sel_tmp1_fu_700_p3);

assign sel_tmp5_fu_542_p2 = (operation == ap_const_lv32_1? 1'b1: 1'b0);

assign sel_tmp6_fu_717_p2 = (or_cond_reg_1309 & sel_tmp5_reg_1280);

assign sel_tmp7_fu_721_p3 = ((sel_tmp6_fu_717_p2[0:0] === 1'b1) ? pixConvolved_3_reg_1371 : sel_tmp4_fu_710_p3);

assign sel_tmp8_fu_548_p2 = (operation == ap_const_lv32_0? 1'b1: 1'b0);

assign sel_tmp9_fu_728_p2 = (or_cond_reg_1309 & sel_tmp8_reg_1285);

assign sel_tmp_fu_1127_p3 = ((ap_reg_ppstg_sel_tmp3_reg_1415_pp0_it1[0:0] === 1'b1) ? valInWindow_0_maxVal_1_2_2_i_fu_1121_p3 : ap_const_lv8_0);

assign tmp1_fu_995_p2 = (window_val_2_1_fu_989_p2 + window_val_2_0_reg_1599);

assign tmp2_fu_1037_p2 = (window_val_1_1_reg_1549 + window_val_1_2_reg_1574);

assign tmp3_fu_1041_p2 = (tmp1_reg_1624 + tmp2_fu_1037_p2);

assign tmp4_fu_783_p2 = (window_val_0_0_reg_1475 + window_val_0_1_fu_777_p2);

assign tmp5_fu_1070_p2 = (window_val_2_2_reg_1649 + window_val_0_2_reg_1511);

assign tmp6_fu_1074_p2 = (window_val_1_0_reg_1524 + tmp5_fu_1070_p2);

assign tmp7_fu_1079_p2 = (tmp4_reg_1498 + tmp6_fu_1074_p2);

assign tmp_10_cast_fu_1173_p1 = $unsigned(tmp_1_fu_1164_p1);

assign tmp_10_fu_1184_p1 = valOutput_1_fu_1177_p3[7:0];

assign tmp_11_0_1_i_fu_849_p2 = (tmp_15_reg_1503 > tmp_14_reg_1490? 1'b1: 1'b0);

assign tmp_11_0_2_i_fu_859_p2 = (tmp_16_reg_1516 > valInWindow_0_maxVal_1_0_1_i_fu_853_p3? 1'b1: 1'b0);

assign tmp_11_1_1_i_fu_935_p2 = (tmp_18_reg_1560 > valInWindow_0_maxVal_1_1_i_reg_1568? 1'b1: 1'b0);

assign tmp_11_1_2_i_fu_972_p2 = (tmp_19_reg_1585 > valInWindow_0_maxVal_1_1_1_i_reg_1593? 1'b1: 1'b0);

assign tmp_11_1_i_fu_898_p2 = (tmp_17_reg_1535 > valInWindow_0_maxVal_1_0_2_i_reg_1543? 1'b1: 1'b0);

assign tmp_11_2_1_i_fu_1060_p2 = (tmp_21_reg_1635 > valInWindow_0_maxVal_1_2_i_reg_1643? 1'b1: 1'b0);

assign tmp_11_2_2_i_fu_1117_p2 = (tmp_22_reg_1665 > valInWindow_0_maxVal_1_2_1_i_reg_1673? 1'b1: 1'b0);

assign tmp_11_2_i_fu_1014_p2 = (tmp_20_reg_1610 > valInWindow_0_maxVal_1_1_2_i_reg_1618? 1'b1: 1'b0);

assign tmp_11_fu_604_p2 = ($signed(col_assign_phi_fu_467_p4) < $signed(32'b1010110111)? 1'b1: 1'b0);

assign tmp_12_fu_638_p2 = (countWait_phi_fu_501_p4 > ap_const_lv19_2B9? 1'b1: 1'b0);

assign tmp_13_fu_1188_p3 = valOutput_1_fu_1177_p3[ap_const_lv32_E];

assign tmp_14_fu_766_p1 = window_val_0_0_fu_760_p2[7:0];

assign tmp_15_fu_788_p1 = window_val_0_1_fu_777_p2[7:0];

assign tmp_16_fu_806_p1 = window_val_0_2_fu_800_p2[7:0];

assign tmp_17_fu_845_p1 = window_val_1_0_fu_817_p2[7:0];

assign tmp_18_fu_894_p1 = window_val_1_1_fu_878_p2[7:0];

assign tmp_18_tr_fu_1141_p1 = $signed(valOutput_reg_1679);

assign tmp_19_fu_931_p1 = window_val_1_2_fu_915_p2[7:0];

assign tmp_1_fu_1164_p1 = $signed(tmp_9_reg_1689);

assign tmp_20_fu_968_p1 = window_val_2_0_fu_952_p2[7:0];

assign tmp_21_fu_1010_p1 = window_val_2_1_fu_989_p2[7:0];

assign tmp_22_fu_1056_p1 = window_val_2_2_fu_1031_p2[7:0];

assign tmp_25_0_1_fu_688_p1 = pixConvolved_3_reg_1371;

assign tmp_25_0_2_fu_746_p1 = col_assign_1_0_2_reg_1390;

assign tmp_2_fu_1167_p2 = (ap_const_lv15_0 - tmp_7_cast_fu_1160_p1);

assign tmp_3_fu_566_p4 = {{idxRow_phi_fu_478_p4[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_4_fu_582_p4 = {{col_assign_phi_fu_467_p4[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_5_0_1_i_fu_823_p2 = (tmp_15_reg_1503 < tmp_14_reg_1490? 1'b1: 1'b0);

assign tmp_5_0_2_i_fu_833_p2 = (tmp_16_reg_1516 < valInWindow_0_minVal_1_0_1_i_fu_827_p3? 1'b1: 1'b0);

assign tmp_5_1_1_i_fu_921_p2 = (tmp_18_reg_1560 < valInWindow_0_minVal_1_1_i_reg_1554? 1'b1: 1'b0);

assign tmp_5_1_2_i_fu_958_p2 = (tmp_19_reg_1585 < valInWindow_0_minVal_1_1_1_i_reg_1579? 1'b1: 1'b0);

assign tmp_5_1_i_fu_884_p2 = (tmp_17_reg_1535 < valInWindow_0_minVal_1_0_2_i_reg_1529? 1'b1: 1'b0);

assign tmp_5_2_1_i_fu_1046_p2 = (tmp_21_reg_1635 < valInWindow_0_minVal_1_2_i_reg_1629? 1'b1: 1'b0);

assign tmp_5_2_2_i_fu_1107_p2 = (tmp_22_reg_1665 < valInWindow_0_minVal_1_2_1_i_reg_1659? 1'b1: 1'b0);

assign tmp_5_2_i_fu_1000_p2 = (tmp_20_reg_1610 < valInWindow_0_minVal_1_1_2_i_reg_1604? 1'b1: 1'b0);

assign tmp_7_cast_fu_1160_p1 = tmp_8_fu_1150_p4;

assign tmp_7_fu_681_p1 = pixConvolved_reg_485;

assign tmp_8_fu_1150_p4 = {{p_neg_fu_1144_p2[ap_const_lv32_10 : ap_const_lv32_3]}};

assign tmp_data_V_fu_1204_p3 = ((ap_reg_ppstg_sel_tmp9_reg_1425_pp0_it1[0:0] === 1'b1) ? p_s_fu_1196_p3 : sel_tmp10_reg_1694);

assign tmp_last_V_fu_1223_p2 = (countWait_1_reg_508 > ap_const_lv10_2B7? 1'b1: 1'b0);

assign tmp_s_fu_560_p1 = col_assign_phi_fu_467_p4;

assign valInWindow_0_maxVal_1_0_1_i_fu_853_p3 = ((tmp_11_0_1_i_fu_849_p2[0:0] === 1'b1) ? tmp_15_reg_1503 : tmp_14_reg_1490);

assign valInWindow_0_maxVal_1_0_2_i_fu_864_p3 = ((tmp_11_0_2_i_fu_859_p2[0:0] === 1'b1) ? tmp_16_reg_1516 : valInWindow_0_maxVal_1_0_1_i_fu_853_p3);

assign valInWindow_0_maxVal_1_1_1_i_fu_939_p3 = ((tmp_11_1_1_i_fu_935_p2[0:0] === 1'b1) ? tmp_18_reg_1560 : valInWindow_0_maxVal_1_1_i_reg_1568);

assign valInWindow_0_maxVal_1_1_2_i_fu_976_p3 = ((tmp_11_1_2_i_fu_972_p2[0:0] === 1'b1) ? tmp_19_reg_1585 : valInWindow_0_maxVal_1_1_1_i_reg_1593);

assign valInWindow_0_maxVal_1_1_i_fu_902_p3 = ((tmp_11_1_i_fu_898_p2[0:0] === 1'b1) ? tmp_17_reg_1535 : valInWindow_0_maxVal_1_0_2_i_reg_1543);

assign valInWindow_0_maxVal_1_2_1_i_fu_1064_p3 = ((tmp_11_2_1_i_fu_1060_p2[0:0] === 1'b1) ? tmp_21_reg_1635 : valInWindow_0_maxVal_1_2_i_reg_1643);

assign valInWindow_0_maxVal_1_2_2_i_fu_1121_p3 = ((tmp_11_2_2_i_fu_1117_p2[0:0] === 1'b1) ? tmp_22_reg_1665 : valInWindow_0_maxVal_1_2_1_i_reg_1673);

assign valInWindow_0_maxVal_1_2_i_fu_1018_p3 = ((tmp_11_2_i_fu_1014_p2[0:0] === 1'b1) ? tmp_20_reg_1610 : valInWindow_0_maxVal_1_1_2_i_reg_1618);

assign valInWindow_0_minVal_1_0_1_i_fu_827_p3 = ((tmp_5_0_1_i_fu_823_p2[0:0] === 1'b1) ? tmp_15_reg_1503 : tmp_14_reg_1490);

assign valInWindow_0_minVal_1_0_2_i_fu_838_p3 = ((tmp_5_0_2_i_fu_833_p2[0:0] === 1'b1) ? tmp_16_reg_1516 : valInWindow_0_minVal_1_0_1_i_fu_827_p3);

assign valInWindow_0_minVal_1_1_1_i_fu_925_p3 = ((tmp_5_1_1_i_fu_921_p2[0:0] === 1'b1) ? tmp_18_reg_1560 : valInWindow_0_minVal_1_1_i_reg_1554);

assign valInWindow_0_minVal_1_1_2_i_fu_962_p3 = ((tmp_5_1_2_i_fu_958_p2[0:0] === 1'b1) ? tmp_19_reg_1585 : valInWindow_0_minVal_1_1_1_i_reg_1579);

assign valInWindow_0_minVal_1_1_i_fu_888_p3 = ((tmp_5_1_i_fu_884_p2[0:0] === 1'b1) ? tmp_17_reg_1535 : valInWindow_0_minVal_1_0_2_i_reg_1529);

assign valInWindow_0_minVal_1_2_1_i_fu_1050_p3 = ((tmp_5_2_1_i_fu_1046_p2[0:0] === 1'b1) ? tmp_21_reg_1635 : valInWindow_0_minVal_1_2_i_reg_1629);

assign valInWindow_0_minVal_1_2_2_i_fu_1111_p3 = ((tmp_5_2_2_i_fu_1107_p2[0:0] === 1'b1) ? tmp_22_reg_1665 : valInWindow_0_minVal_1_2_1_i_reg_1659);

assign valInWindow_0_minVal_1_2_i_fu_1004_p3 = ((tmp_5_2_i_fu_1000_p2[0:0] === 1'b1) ? tmp_20_reg_1610 : valInWindow_0_minVal_1_1_2_i_reg_1604);

assign valOutput_1_fu_1177_p3 = ((tmp_6_reg_1684[0:0] === 1'b1) ? tmp_2_fu_1167_p2 : tmp_10_cast_fu_1173_p1);

assign valOutput_fu_1084_p2 = (tmp3_reg_1654 + tmp7_fu_1079_p2);

assign window_val_0_0_fu_760_p0 = reg_519;

assign window_val_0_0_fu_760_p1 = window_val_0_0_fu_760_p10;

assign window_val_0_0_fu_760_p10 = reg_527;

assign window_val_0_0_fu_760_p2 = ($signed(window_val_0_0_fu_760_p0) * $signed({{1'b0}, {window_val_0_0_fu_760_p1}}));

assign window_val_0_1_fu_777_p0 = reg_523;

assign window_val_0_1_fu_777_p1 = window_val_0_1_fu_777_p10;

assign window_val_0_1_fu_777_p10 = lineBuff_val_0_load_1_reg_1435;

assign window_val_0_1_fu_777_p2 = ($signed(window_val_0_1_fu_777_p0) * $signed({{1'b0}, {window_val_0_1_fu_777_p1}}));

assign window_val_0_2_fu_800_p0 = reg_532;

assign window_val_0_2_fu_800_p1 = window_val_0_2_fu_800_p10;

assign window_val_0_2_fu_800_p10 = reg_527;

assign window_val_0_2_fu_800_p2 = ($signed(window_val_0_2_fu_800_p0) * $signed({{1'b0}, {window_val_0_2_fu_800_p1}}));

assign window_val_1_0_fu_817_p0 = reg_519;

assign window_val_1_0_fu_817_p1 = window_val_1_0_fu_817_p10;

assign window_val_1_0_fu_817_p10 = lineBuff_val_1_load_1_reg_1445;

assign window_val_1_0_fu_817_p2 = ($signed(window_val_1_0_fu_817_p0) * $signed({{1'b0}, {window_val_1_0_fu_817_p1}}));

assign window_val_1_1_fu_878_p0 = reg_523;

assign window_val_1_1_fu_878_p1 = window_val_1_1_fu_878_p10;

assign window_val_1_1_fu_878_p10 = lineBuff_val_1_load_2_reg_1450;

assign window_val_1_1_fu_878_p2 = ($signed(window_val_1_1_fu_878_p0) * $signed({{1'b0}, {window_val_1_1_fu_878_p1}}));

assign window_val_1_2_fu_915_p0 = reg_532;

assign window_val_1_2_fu_915_p1 = window_val_1_2_fu_915_p10;

assign window_val_1_2_fu_915_p10 = lineBuff_val_1_load_3_reg_1480;

assign window_val_1_2_fu_915_p2 = ($signed(window_val_1_2_fu_915_p0) * $signed({{1'b0}, {window_val_1_2_fu_915_p1}}));

assign window_val_2_0_fu_952_p0 = reg_519;

assign window_val_2_0_fu_952_p1 = window_val_2_0_fu_952_p10;

assign window_val_2_0_fu_952_p10 = lineBuff_val_2_load_1_reg_1460;

assign window_val_2_0_fu_952_p2 = ($signed(window_val_2_0_fu_952_p0) * $signed({{1'b0}, {window_val_2_0_fu_952_p1}}));

assign window_val_2_1_fu_989_p0 = reg_523;

assign window_val_2_1_fu_989_p1 = window_val_2_1_fu_989_p10;

assign window_val_2_1_fu_989_p10 = lineBuff_val_2_load_2_reg_1465;

assign window_val_2_1_fu_989_p2 = ($signed(window_val_2_1_fu_989_p0) * $signed({{1'b0}, {window_val_2_1_fu_989_p1}}));

assign window_val_2_2_fu_1031_p0 = reg_532;

assign window_val_2_2_fu_1031_p1 = window_val_2_2_fu_1031_p10;

assign window_val_2_2_fu_1031_p10 = lineBuff_val_2_load_3_reg_1485;

assign window_val_2_2_fu_1031_p2 = ($signed(window_val_2_2_fu_1031_p0) * $signed({{1'b0}, {window_val_2_2_fu_1031_p1}}));
always @ (posedge ap_clk) begin
    kernel_addr_reg_1230[3:0] <= 4'b0000;
    kernel_addr_1_reg_1235[3:0] <= 4'b0001;
    kernel_addr_2_reg_1240[3:0] <= 4'b0010;
    kernel_addr_3_reg_1245[3:0] <= 4'b0011;
    kernel_addr_4_reg_1250[3:0] <= 4'b0100;
    kernel_addr_5_reg_1255[3:0] <= 4'b0101;
    kernel_addr_6_reg_1260[3:0] <= 4'b0110;
    kernel_addr_7_reg_1265[3:0] <= 4'b0111;
    kernel_addr_8_reg_1270[3:0] <= 4'b1000;
    tmp_s_reg_1294[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //doImgProc

